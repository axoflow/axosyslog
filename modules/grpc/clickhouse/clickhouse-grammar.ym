/*
 * Copyright (c) 2024 Axoflow
 * Copyright (c) 2024 Attila Szakacs <attila.szakacs@axoflow.com>
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 * As an additional exemption you are allowed to compile & link against the
 * OpenSSL libraries as published by the OpenSSL project. See the file
 * COPYING for details.
 *
 */

/* REQUIRE modules/grpc/common/grpc-grammar.ym */

%code top {
#include "clickhouse-parser.h"

}


%code {

#include "cfg-grammar-internal.h"
#include "plugin.h"
#include "syslog-names.h"

#include "clickhouse-dest.h"

#include <stdlib.h>

}

%define api.prefix {clickhouse_}

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {LogDriver **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%token KW_CLICKHOUSE
%token KW_DATABASE
%token KW_TABLE
%token KW_USER
%token KW_PASSWORD
%token KW_SERVER_SIDE_SCHEMA
%token KW_JSON_VAR
%token KW_FORMAT

%type <ptr> clickhouse_dest

%%

start
  : LL_CONTEXT_DESTINATION clickhouse_dest { YYACCEPT; }
  ;

clickhouse_dest
  : KW_CLICKHOUSE
    {
      last_driver = *instance = clickhouse_dd_new(configuration);
    }
    '(' _inner_dest_context_push clickhouse_dest_options _inner_dest_context_pop ')' { $$ = last_driver; }
  ;

clickhouse_dest_options
  : clickhouse_dest_option clickhouse_dest_options
  |
  ;

clickhouse_dest_option
  : KW_DATABASE '(' string ')'{ clickhouse_dd_set_database(last_driver, $3); free($3); }
  | KW_TABLE '(' string ')'{ clickhouse_dd_set_table(last_driver, $3); free($3); }
  | KW_USER '(' string ')'{ clickhouse_dd_set_user(last_driver, $3); free($3); }
  | KW_PASSWORD '(' string ')'{ clickhouse_dd_set_password(last_driver, $3); free($3); }
  | KW_SERVER_SIDE_SCHEMA '(' string ')'{ clickhouse_dd_set_server_side_schema(last_driver, $3); free($3); }
  | grpc_dest_general_option
  | grpc_dest_schema_option
  | grpc_dest_proto_var_option
  | KW_JSON_VAR '(' template_name_or_content ')'{ clickhouse_dd_set_json_var(last_driver, $3); log_template_unref($3); }
  | KW_FORMAT '(' string ')' { CHECK_ERROR(clickhouse_dd_set_format(last_driver, $3), @1, "invalid format value '%s', possible values:[%s]", $3, CLICKHOUSE_DESTINATION_LIST_FORMATS); free($3); }
  ;

/* INCLUDE_RULES */

%%
